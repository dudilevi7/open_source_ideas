{"version":3,"sources":["Components/Comments/Comments.js","utils/issuesHelper.js","Components/TagsBar/TagsBar.js","Components/TitlesSearch/TitlesSearch.js","Components/Sort/Sort.js","Components/Issues/Issues.js","Components/Logo/Logo.js","App.js","serviceWorker.js","index.js"],"names":["Comments","props","_isMounted","fetchComments","url","req","Request","fetch","then","response","json","data","setState","comments","state","this","Spinner","animation","commentsTemp","commentsArr","map","user","i","key","login","body","id","created_at","Component","getFixTags","issue","tags","labels","forEach","label","name","TagsBar","fetchTags","onLabelClick","labelName","onTagClick","issuesArr","tagName","newData","element","push","getDataByTag","tagsTemp","notEmptyTagsArray","flag","tag","getNotEmptyTags","tagsArr","ListGroup","Item","href","onClick","as","defaultActiveKey","TitlesSearch","filterTitles","inputValue","titleElementsArray","title","value","getAllTitleElements","filter","toLowerCase","includes","promiseOptions","Promise","resolve","setTimeout","onSelectTitle","selectedTitle","defaultValue","onTitleClick","cacheOptions","defaultOptions","loadOptions","onChange","placeholder","isClearable","Sort","onTrendingClick","trending","sort","elementA","elementB","getFiveTrendingIssues","DropdownButton","length","Dropdown","disabled","marked","require","Issues","fetchIssues","issues","allIssuesArray","onCommentsClick","index","currIndex","showBody","trendingIssues","onIssueClicked","prevProps","prevState","issuesTemp","Card","Body","Title","style","cursor","color","textDecoration","dangerouslySetInnerHTML","__html","Button","variant","window","open","html_url","focus","margin","comments_url","Logo","onLogoClick","letterSpacing","textShadow","easings","easeOutExpo","easeInSine","App","reload","className","String","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a66a77d4.chunk.js","sourcesContent":["import React , {Component} from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport './Comments.css';\r\n\r\nclass Comments extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            comments : {}\r\n         };\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this._isMounted) \r\n            this.fetchComments();\r\n    }\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n    fetchComments = () => {\r\n        var url = this.props.url;\r\n        var req = new Request(url);\r\n        fetch(req)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({comments : data}));\r\n    }\r\n    render() {\r\n        if(!this.state.comments[0]) return  <Spinner animation=\"border\" />\r\n        var commentsTemp = this.state.comments;\r\n        const commentsArr = commentsTemp.map((user,i)=>{\r\n            return (\r\n                <div key={i}>\r\n                    <h5>{commentsTemp[i].user.login}</h5>\r\n                    {commentsTemp[i].body}\r\n                    <div id = \"time\">{commentsTemp[i].created_at}</div>\r\n                    <hr></hr>\r\n                </div>\r\n            )\r\n        });\r\n        return (\r\n            <div id = \"commentsContainer\">\r\n             {commentsArr}\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;","\r\nexport const getFixTags = (issue) =>{\r\n        var tags = \"\";\r\n        var labels = issue.labels;\r\n        labels.forEach(label => {\r\n            tags+=\"<a href=\"+\"#\"+\">\"+label.name+\"</a>\"+\"\\xa0\\xa0\\xa0\";\r\n        });\r\n        return tags ;\r\n}\r\nexport const getDataByTag = (tagName,data) => {\r\n    var newData = [];\r\n    data.forEach(element => {\r\n       var labels = element.labels;\r\n       labels.forEach(label => {\r\n           if (label.name === tagName) newData.push(element)\r\n       })\r\n    });\r\n    return newData;\r\n}\r\nexport const getNotEmptyTags = (tags, data) => {\r\n    var notEmptyTagsArray = [];\r\n    var flag = false;\r\n    tags.forEach(tag => {\r\n        data.forEach(element => {\r\n            var labels = element.labels;\r\n            labels.forEach(label=> {\r\n                if (label.name === tag.name)\r\n                    flag = true;\r\n            })\r\n        })\r\n        if(flag) notEmptyTagsArray.push(tag);\r\n        flag = false;\r\n    })\r\n    return notEmptyTagsArray;\r\n}\r\nexport const getAllTitleElements = (data)=> {\r\n    var titleElementsArray = [];\r\n    data.forEach(element => {\r\n        titleElementsArray.push({label : element.title, value : element});\r\n    });\r\n    return titleElementsArray;\r\n}\r\nexport const getFiveTrendingIssues = (data)=> {\r\n    let copyOfData = [...data];\r\n    var sort = copyOfData.sort((elementA,elementB)=> elementB.comments - elementA.comments);\r\n    var fiveTrendingArr = [sort[0],sort[1],sort[2],sort[3],sort[4]];\r\n    return fiveTrendingArr;\r\n}","import React , {Component} from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport './TagsBar.css'\r\nimport { getDataByTag, getNotEmptyTags } from '../../utils/issuesHelper';\r\n\r\nclass TagsBar extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tags : {}\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.fetchTags();\r\n    }\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n\r\n    fetchTags = () =>{\r\n        var url = \"https://api.github.com/repos/open-source-ideas/open-source-ideas/labels\";\r\n        var req = new Request(url);\r\n        fetch(req)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(this._isMounted)\r\n                this.setState({tags : data})\r\n        });\r\n    }\r\n    onLabelClick =  (labelName)=>{\r\n        if (labelName===\"All\"){\r\n            this.props.onTagClick(this.props.issuesArr);\r\n        }else {\r\n            var data = getDataByTag(labelName,this.props.issuesArr);\r\n            this.props.onTagClick(data);\r\n        }\r\n    }\r\n    render() {\r\n        if (!this.state.tags[0]) return <Spinner animation=\"border\" />;\r\n        var tagsTemp = getNotEmptyTags(this.state.tags,this.props.issuesArr) \r\n\r\n        const tagsArr = tagsTemp.map((user,i)=>{\r\n            return   <ListGroup.Item  href={ tagsTemp[i].name} key = {i} onClick = {()=>this.onLabelClick(tagsTemp[i].name)}>\r\n            <div id = \"items\">{tagsTemp[i].name} </div>\r\n        </ListGroup.Item>\r\n        });\r\n        return (\r\n            <div id = \"tagsBarContainer\">\r\n                <h4 id = \"h4Desktop\">Tags</h4>\r\n                <h4 id = \"h4Mobile\">Filter by Tags</h4>\r\n                <ListGroup id = \"listGroup\" as=\"ul\" defaultActiveKey=\"AllIdeas\">\r\n                <ListGroup.Item id = \"all\" href=\"AllIdeas\" key = \"00\" onClick = {()=>this.onLabelClick(\"All\")}>\r\n                  <div id = \"allItems\">All ideas </div>\r\n                </ListGroup.Item>\r\n                    {tagsArr}\r\n                    </ListGroup>\r\n             </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default TagsBar;","import React , {Component} from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport './TitlesSearch.css';\r\nimport { getAllTitleElements } from '../../utils/issuesHelper';\r\n\r\nclass TitlesSearch extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            defaultValue : {\r\n                label : \"\",\r\n                value : null\r\n            }\r\n        };\r\n    } \r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n    }\r\n  \r\n    filterTitles = (inputValue) => {\r\n        const IssuesAndTitlesArray = getAllTitleElements(this.props.issuesArr);\r\n        \r\n        return IssuesAndTitlesArray.filter(issue => {\r\n            return issue.label.toLowerCase().includes(inputValue.toLowerCase())\r\n         }\r\n        );\r\n      }\r\n\r\n    promiseOptions = (inputValue) =>\r\n    new Promise(resolve => {\r\n      setTimeout(() => {\r\n          resolve(this.filterTitles(inputValue));\r\n      }, 1500);\r\n    });\r\n\r\n    onSelectTitle = (selectedTitle) => {\r\n        if(selectedTitle){\r\n        this.setState({defaultValue : {\r\n            label : selectedTitle.label,\r\n            value : selectedTitle.value\r\n        }})\r\n        var data = [selectedTitle.value];\r\n        if(this._isMounted)\r\n             this.props.onTitleClick(data);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id = \"selectTitleInput\">\r\n            <AsyncSelect\r\n             cacheOptions \r\n             defaultOptions\r\n             defaultValue = {this.state.defaultValue.value}\r\n             loadOptions={this.promiseOptions}\r\n             onChange = {this.onSelectTitle}\r\n             placeholder=\"Search by title...\"\r\n             isClearable\r\n            /> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TitlesSearch;","import React , {Component} from 'react';\r\nimport { getFiveTrendingIssues } from '../../utils/issuesHelper';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nclass Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    \r\n    onTrendingClick = ()=> {\r\n            var trending = getFiveTrendingIssues(this.props.issuesArr);\r\n            this.props.onTrendingClick(trending);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Sort by\">\r\n            {this.props.issuesArr.length>4 ? <Dropdown.Item onClick = {this.onTrendingClick}>Trending</Dropdown.Item> \r\n            : <Dropdown.Item disabled>Trending</Dropdown.Item> }\r\n            </DropdownButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;","import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Comments from '../Comments/Comments';\r\nimport TagsBar from '../TagsBar/TagsBar';\r\nimport TitlesSearch from '../TitlesSearch/TitlesSearch';\r\nimport './Issues.css'\r\nimport Sort from '../Sort/Sort';\r\nimport { getFixTags } from '../../utils/issuesHelper';\r\nvar marked = require('marked');\r\n\r\nclass Issues extends  Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n           issues : {},\r\n           allIssuesArray : {},\r\n           currIndex : '',\r\n           showBody : false\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        this.fetchIssues();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n\t\t// if (this.state.currentSelectedCityKey !== prevState.currentSelectedCityKey) {\r\n\t\t//   this.fetchCurrentTemperature();\r\n        // }\r\n        // console.log(\"new state\" ,this.state)\r\n        // console.log(\"prev state\",prevState)\r\n        \r\n\t}\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n    fetchIssues = () => {\r\n        var url = \"https://api.github.com/repos/open-source-ideas/open-source-ideas/issues\";\r\n        var req = new Request(url);\r\n        fetch(req)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (this._isMounted){\r\n                this.setState({issues : data});\r\n                this.setState({allIssuesArray : data})\r\n\t\t\t}\r\n        })\r\n    }\r\n    onCommentsClick = (comments,index)=> {\r\n        if(comments!==0 && this.state.currIndex!==index)\r\n        this.setState({currIndex : index});\r\n        else this.setState({currIndex : \"\"});\r\n    }\r\n    onTagClick = (data) => {\r\n        this.setState({showBody : false});\r\n        this.setState({issues : data})\r\n    }\r\n    onTitleClick = (data) => {\r\n        this.setState({showBody : true});\r\n        this.setState({issues : data})\r\n    }\r\n    onTrendingClick = (trendingIssues) => {\r\n      this.setState({showBody : false});\r\n      this.setState({issues : trendingIssues})\r\n    }\r\n    onIssueClicked = (issue) => {\r\n        this.setState({showBody : true})\r\n        var data = [issue];\r\n        this.setState({issues : data})\r\n    }\r\n    render() {\r\n        if(!this.state.issues[0] && !this.state.issues.title) return  <Spinner animation=\"border\" />\r\n        var issuesTemp = this.state.issues;\r\n        const issuesArr = issuesTemp.map((user,i)=>{\r\n            return (\r\n                    <Card id = \"issue\" key ={i}>\r\n                    <Card.Body>\r\n                        <Card.Title id = \"issueTitle\" style = {{cursor : 'pointer',color : '#0275d8',textDecoration : 'underline'}} \r\n                        onClick = {()=> this.onIssueClicked(issuesTemp[i])}>{issuesTemp[i].title}</Card.Title>\r\n                        <div id = \"tags\"\r\n                             dangerouslySetInnerHTML = {{__html : marked(getFixTags(issuesTemp[i]))}}></div>              \r\n                      {this.state.showBody?  <div id = \"bodyText\"\r\n                             dangerouslySetInnerHTML = {{__html : marked(issuesTemp[i].body)}}></div> : \"\"}\r\n                        <div id = 'buttons'>\r\n                          <Button id = \"commentsBtn\" variant = \"dark\" onClick = {()=> this.onCommentsClick(issuesTemp[i].comments,i)}>{issuesTemp[i].comments} comments</Button>\r\n                          <Button id = \"gitBtn\" onClick ={()=>window.open(issuesTemp[i].html_url, '_blank').focus()}>View on GitHub</Button>\r\n                        </div>\r\n                        {this.state.currIndex === i ? \r\n                                <div id={\"div\"+i} style = {{margin : '10px'}}>\r\n                                  <Comments url = {issuesTemp[i].comments_url}/>\r\n                                </div> \r\n                         : \"\"}\r\n                    </Card.Body>\r\n                    </Card>\r\n            );\r\n        });\r\n        return (\r\n            <div id = \"issuesContainer\">\r\n               <TagsBar issuesArr = {this.state.allIssuesArray} onTagClick = {this.onTagClick}/>\r\n               <div id = \"issuesArray\">\r\n                    <div id = \"search\">\r\n                        <TitlesSearch issuesArr = {this.state.allIssuesArray} onTitleClick = {this.onTitleClick}/>\r\n                        <Sort issuesArr = {this.state.issues} onTrendingClick = {this.onTrendingClick}/>\r\n                    </div>\r\n               {issuesArr}\r\n               </div>\r\n               \r\n             </div>\r\n        );\r\n    }\r\n}\r\nexport default Issues;\r\n","import React , {Component} from 'react';\r\nimport {easings} from 'react-animation';\r\nimport './Logo.css';\r\n\r\nclass Logo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          \r\n          };\r\n      }\r\n    render() {\r\n        return (\r\n            <div id = \"logo\" onClick = {()=>this.props.onLogoClick()}> \r\n                <h1 style = {{color : 'white',letterSpacing : '7px',textShadow : '2px 2px 5px #0279d1'\r\n                ,animation : `pop-in ${easings.easeOutExpo} 3000ms forwards`}}>OSI</h1>\r\n                <h5 style = {{color : 'white',animation : `pop-in ${easings.easeInSine} 2000ms forwards`}}>Open Source Ideas</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logo;","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Issues from './Components/Issues/Issues';\nimport Logo from './Components/Logo/Logo';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        reload : false\n      }\n  }\n\n\n  onLogoClick = ()=> {\n    this.setState({reload : !this.state.reload})\n    \n  }\n  render() {\n  \n    return (\n      <div className=\"App\">\n        <Logo onLogoClick = {this.onLogoClick}/>\n        <Issues key = {String(this.state.reload)}/>\n      </div>\n    );\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}